<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">
    <flow name="getFlights">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
        <set-variable variableName="flight" value="#[message.inboundProperties.'http.query.params'.flight]" doc:name="Variable"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.flight == &quot;united&quot;]">
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            </when>
            <when expression="#[flowVars.flight == &quot;delta&quot;]">
                <flow-ref name="implementationFlow" doc:name="implementationFlow"/>
            </when>
            <otherwise>
                <flow-ref name="implementationFlow1" doc:name="implementationFlow1"/>
            </otherwise>
        </choice>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="getUnitedFlightsFlow">
        <http:request config-ref="HTTP_Request_Configuration" path="/flights/{ID}" method="GET" doc:name="Rest Requester">
            <http:request-builder>
                <http:query-param paramName="client_id" value="697dab48ceff4116a08c27f7a064825c"/>
                <http:query-param paramName="client_secret" value="42e575160e2e4e02A6F6C2148BAB1E4B"/>
                <http:uri-param paramName="ID" value="#[message.inboundProperties.'http.query.params'.id == empty ? '1' : message.inboundProperties.'http.query.params'.id]"/>
            </http:request-builder>
        </http:request>
        <dw:transform-message metadata:id="3f7c03e8-d2c3-4a93-bf33-c5edb4018ce5" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	flights: [{
		airlineName: "Nit_Test" as String,
		price: payload.price,
		code: payload.code
	}]
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="LOGGER:: #[message.payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="implementationFlow">
        <set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code == empty ? 'SFO' : message.inboundProperties.'http.query.params'.code]" doc:name="Variable"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: flowVars.code as :string
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Delta_Web_Service_Consumer" operation="findFlight" doc:name="Web Service Consumer"/>
        <dw:transform-message metadata:id="6cb92a9d-c5ca-4695-afbf-ff4c8c140857" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://soap.training.mulesoft.com/
---
payload.ns0#findFlightResponse.*return map ((return , indexOfReturn) -> {
	airline: return.airlineName,
	flightCode: return.code,
	fromAirportCode: return.origin,
	toAirportCode: return.destination,
	departureDate: return.departureDate,
	emptySeats: return.emptySeats,
	price: return.price,
	planeType: return.planeType
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
        <exception-strategy ref="implementationChoice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <choice-exception-strategy name="implementationChoice_Exception_Strategy">
        <catch-exception-strategy when="#[exception.causeMatches(&quot;com.mulesoft.weave.*&quot;)]" doc:name="Catch Exception Strategy">
            <set-payload value="No flights to #[flowVars.code]" doc:name="Set Payload"/>
            <logger message="Exception is #[message.exception.getMessage()]" level="INFO" doc:name="Logger"/>
        </catch-exception-strategy>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="Bad RequestS" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
    <flow name="implementationFlow1">
        <scatter-gather doc:name="Scatter-Gather">
            <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            <flow-ref name="implementationFlow" doc:name="implementationFlow"/>
        </scatter-gather>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
flatten payload]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
